/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views.Inventory;

import Controller.InventoryController;
import Database.InventoryDB;
import Model.Inventory;
import Sections.TransitionSection;
import Sections.CreateSection;

import Sections.SetSection;
import com.github.sarxos.webcam.Webcam;
import com.github.sarxos.webcam.WebcamPanel;
import com.github.sarxos.webcam.WebcamResolution;
import com.google.zxing.BinaryBitmap;
import com.google.zxing.LuminanceSource;
import com.google.zxing.MultiFormatReader;
import com.google.zxing.NotFoundException;
import com.google.zxing.Result;
import com.google.zxing.client.j2se.BufferedImageLuminanceSource;
import com.google.zxing.common.HybridBinarizer;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.Frame;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.util.ArrayList;

import java.util.List;
import java.util.concurrent.Executor;
import java.util.concurrent.Executors;
import java.util.concurrent.ThreadFactory;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;


/**
 *
 * @author Eunar B. Dayangco
 */
public class ScanInventory extends javax.swing.JFrame implements Runnable, ThreadFactory{

    /**
     * Creates new form ScanInventory
     */
    
    private Webcam webcam = null;
    private WebcamPanel panel = null;
    private final Executor executor = Executors.newSingleThreadExecutor(this);
    private Inventory detectedInventory;
    private final SetSection setter= new SetSection();
    
    private String resultFound;
    
    public ScanInventory() {
        
        initComponents();
        detectedInventory= new Inventory();
        manualize();
    }
    
    public final void manualize(){
        resultFound = "";
         this.setMinimumSize(new Dimension(scanbodyPanel.getWidth(),scanbodyPanel.getHeight()+20));
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        this.setLocation(dim.width/2-this.getSize().width/2, (dim.height/2-this.getSize().height/2)-50);
        setter.setIcon(this);
        setter.designForm(this, scanbodyPanel, "mini");
        listofCameras();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        scanbodyPanel = new javax.swing.JPanel();
        resultPanel = new javax.swing.JPanel();
        cameraList = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtInventoryID = new javax.swing.JLabel();
        txtname = new javax.swing.JLabel();
        txtissuedby = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtreceivedby = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtinsertDate = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtLastUpdate = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        cameraView = new javax.swing.JPanel();
        turnoffbtn = new javax.swing.JButton();
        headbar = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        minbtn = new javax.swing.JLabel();
        closebtn = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        getContentPane().setLayout(null);

        scanbodyPanel.setBackground(new java.awt.Color(51, 255, 51));
        scanbodyPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        scanbodyPanel.setLayout(null);

        resultPanel.setBackground(new java.awt.Color(0, 102, 0));
        resultPanel.setLayout(null);

        cameraList.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        cameraList.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cameraListItemStateChanged(evt);
            }
        });
        cameraList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cameraListActionPerformed(evt);
            }
        });
        resultPanel.add(cameraList);
        cameraList.setBounds(40, 60, 240, 30);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setText("Choose Camera:");
        resultPanel.add(jLabel14);
        jLabel14.setBounds(40, 30, 160, 20);

        jComboBox1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Display to Form", "Display here", " " }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });
        resultPanel.add(jComboBox1);
        jComboBox1.setBounds(300, 60, 210, 30);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel1.setText("Result Options:");
        resultPanel.add(jLabel1);
        jLabel1.setBounds(300, 30, 138, 22);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("              ID:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("   Name:");

        txtInventoryID.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtInventoryID.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtInventoryID.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        txtname.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtname.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtname.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        txtissuedby.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtissuedby.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtissuedby.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setText("  Issued by:");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setText(" Received  by:");

        txtreceivedby.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtreceivedby.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtreceivedby.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel10.setText("Insert Date:");

        txtinsertDate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtinsertDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtinsertDate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setText(" Last Update:");

        txtLastUpdate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        txtLastUpdate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtLastUpdate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton2.setText("SHOW MORE INFO");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(jLabel10)
                        .addGap(18, 18, 18)
                        .addComponent(txtinsertDate, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addComponent(txtLastUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(250, 250, 250)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(51, 51, 51)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtInventoryID, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(71, 71, 71)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtissuedby, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                            .addComponent(txtname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtreceivedby, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jLabel7)
                .addGap(336, 336, 336))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtInventoryID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtissuedby, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtreceivedby, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addGap(10, 10, 10)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtinsertDate, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(5, 5, 5)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(txtLastUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jButton2))
        );

        resultPanel.add(jPanel2);
        jPanel2.setBounds(40, 110, 470, 310);

        scanbodyPanel.add(resultPanel);
        resultPanel.setBounds(520, 60, 540, 450);

        jPanel3.setOpaque(false);
        jPanel3.setLayout(null);

        cameraView.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        cameraView.setOpaque(false);

        javax.swing.GroupLayout cameraViewLayout = new javax.swing.GroupLayout(cameraView);
        cameraView.setLayout(cameraViewLayout);
        cameraViewLayout.setHorizontalGroup(
            cameraViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 404, Short.MAX_VALUE)
        );
        cameraViewLayout.setVerticalGroup(
            cameraViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 324, Short.MAX_VALUE)
        );

        jPanel3.add(cameraView);
        cameraView.setBounds(30, 27, 410, 330);

        turnoffbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        turnoffbtn.setText("TURN OFF CAMERA");
        turnoffbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                turnoffbtnActionPerformed(evt);
            }
        });
        jPanel3.add(turnoffbtn);
        turnoffbtn.setBounds(150, 370, 180, 23);

        scanbodyPanel.add(jPanel3);
        jPanel3.setBounds(40, 60, 470, 420);

        headbar.setBackground(new java.awt.Color(0, 0, 0));
        headbar.setLayout(null);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 255, 255));
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("SCAN INVENTORY");
        headbar.add(jLabel15);
        jLabel15.setBounds(10, -6, 140, 40);

        minbtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        minbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/headers/minimize.png"))); // NOI18N
        minbtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                minbtnMouseClicked(evt);
            }
        });
        headbar.add(minbtn);
        minbtn.setBounds(1040, 0, 30, 30);

        closebtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        closebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/headers/cancel.png"))); // NOI18N
        closebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closebtnMouseClicked(evt);
            }
        });
        headbar.add(closebtn);
        closebtn.setBounds(1070, 0, 30, 30);

        scanbodyPanel.add(headbar);
        headbar.setBounds(0, 0, 1110, 30);

        getContentPane().add(scanbodyPanel);
        scanbodyPanel.setBounds(0, 0, 1100, 560);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void cameraListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cameraListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cameraListActionPerformed

    private void cameraListItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cameraListItemStateChanged
        int count = cameraList.getSelectedIndex();
        
        openCamera(count);
    }//GEN-LAST:event_cameraListItemStateChanged

    private void turnoffbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_turnoffbtnActionPerformed
        String label = turnoffbtn.getText();
        
        if(label.equals("TURN OFF CAMERA")){
            webcam.close();
            turnoffbtn.setText("TURN ON CAMERA");
        }
        else if(label.equals("TURN ON CAMERA")){
              int count = cameraList.getSelectedIndex();
              openCamera(count);
               turnoffbtn.setText("TURN OFF CAMERA");
        }
    }//GEN-LAST:event_turnoffbtnActionPerformed

    private void minbtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_minbtnMouseClicked
        this.setState(Frame.ICONIFIED);
    }//GEN-LAST:event_minbtnMouseClicked

    private void closebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closebtnMouseClicked
        webcam.close(); 
        this.dispose();

    }//GEN-LAST:event_closebtnMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ScanInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ScanInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ScanInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ScanInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ScanInventory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cameraList;
    private javax.swing.JPanel cameraView;
    private javax.swing.JLabel closebtn;
    private javax.swing.JPanel headbar;
    private javax.swing.JButton jButton2;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel minbtn;
    private javax.swing.JPanel resultPanel;
    private javax.swing.JPanel scanbodyPanel;
    private javax.swing.JButton turnoffbtn;
    private javax.swing.JLabel txtInventoryID;
    private javax.swing.JLabel txtLastUpdate;
    private javax.swing.JLabel txtinsertDate;
    private javax.swing.JLabel txtissuedby;
    private javax.swing.JLabel txtname;
    private javax.swing.JLabel txtreceivedby;
    // End of variables declaration//GEN-END:variables

    @Override
public void run() {
        do {
            try {
                Thread.sleep(100);
            }catch (InterruptedException e) {
                e.printStackTrace();
            }

            Result result = null;
            BufferedImage image = null;
            
            if (webcam.isOpen()) {
                
                if ((image = webcam.getImage()) == null) {continue;}
                
                LuminanceSource source = new BufferedImageLuminanceSource(image);
                BinaryBitmap bitmap = new BinaryBitmap(new HybridBinarizer(source));

                try {
                    result = new MultiFormatReader().decode(bitmap);
                }catch (NotFoundException e) {
                    // fall thru, it means there is no QR code in image
                }
            }

            if (result != null) {
                
                if(!this.resultFound.equals(result.getText())){
                    
                    resultFound = result.getText();
                    
                     try {

                        ArrayList<Inventory> inventoriesdetected = new InventoryDB().getAllDatas(" WHERE InventoryParNo=?", result.getText());

                        if(inventoriesdetected.isEmpty()){

                        }else{

                        this.detectedInventory =inventoriesdetected.get(0);
                        displayDetectedInventory();
                        new TransitionSection().fromTop_toBottom(new InventoryInfo(this.detectedInventory,this), 70,32);

                        }



                    } catch (Exception ex) {
                        CreateSection.displayErrorMessage("Find Inventory Detected Error", 
                                ex.toString());
                        //Logger.getLogger(ScanInventory.class.getName()).log(Level.SEVERE, null, ex);
                    }
                
                
                }
                
               
                
               
                
              
               
               
            }

        }while (true);
    }

    @Override
    public Thread newThread(Runnable r) {
         Thread t = new Thread(r, "example-runner");
	t.setDaemon(true);
	return t;
    }
    
    public void openCamera(int cameraListnumber){
     cameraView.setLayout(new FlowLayout());
     Dimension[] nonStandardResolutions = new Dimension[] {
			WebcamResolution.PAL.getSize(),
			WebcamResolution.PAL.getSize(),
			new Dimension(2000, 1000),
			new Dimension(1000, 500),
     };
 
  
    webcam = Webcam.getWebcams().get(cameraListnumber);
    webcam.setCustomViewSizes(nonStandardResolutions);
    try{
         webcam.setViewSize(WebcamResolution.PAL.getSize());
    }catch(IllegalArgumentException e){
    
    }
   
    
    
    Dimension size = WebcamResolution.PAL.getSize();
   // CreateSection.displayInfoMessage("size", size.getWidth()+"  - "+size.getHeight());
    
    
    panel = new WebcamPanel(webcam);
    panel.setPreferredSize(new Dimension(500,380));
    panel.setMirrored(true);
    JFrame frame = new JFrame();
    frame.add(panel);
    frame.pack();
    cameraView.add(frame.getContentPane());
    cameraView.getParent().revalidate();
   
    
    executor.execute(this);
    
    }
    
    public void listofCameras(){
        
        List <Webcam> webcams = Webcam.getWebcams();
        
        SetSection.setCameralist(cameraList,webcams);
    }
    
    public void displayDetectedInventory(){
        txtInventoryID.setText(detectedInventory.getInventoryID()+"");
        txtname.setText(detectedInventory.getInventoryName());
       // txtissuedby.setText(detectedInventory.getIssuedBy().getEmployeeName());
       // txtreceivedby.setText(detectedInventory.getReceivedBy().getEmployeeName());
        txtinsertDate.setText(detectedInventory.getInventoryInsertDate());
    }

    public void setResultFound(String resultFound) {
        this.resultFound = resultFound;
    }
    
    
    
    
}


