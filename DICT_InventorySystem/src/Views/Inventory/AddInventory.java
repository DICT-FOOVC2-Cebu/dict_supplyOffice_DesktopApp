/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views.Inventory;


import Controller.EmployeeController;
import Model.*;

import Controller.InventoryController;
import Controller.LocationController;
import Sections.*;
import Views.Employee.AddEmployee;
import Views.Location.AddLocation;
import Views.Slider.SliderLeft;
import java.awt.*;
import java.io.File;
import java.util.ArrayList;
import javax.swing.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;



/**
 *
 * @author ModelTable B. Dayangco
 */
public class AddInventory extends javax.swing.JFrame {



    private InventoryController controller;
    private AddEmployee addEmployee;
    private AddLocation addLocation;
    private Image image;
    private ArrayList<Employee> employees;
    private ArrayList<Location> locations;
    private ArrayList<Inventory> inventories;
    private String message;
    
    public AddInventory() {
        initComponents();
        setPosition();
        init();
        
    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        InventoryInfoPanel = new javax.swing.JPanel();
        entryImage = new javax.swing.JLabel();
        uploadbtn = new javax.swing.JButton();
        shootImage = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        txtinventoryName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txt_parNo = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        findIssuedbutton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jButton9 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtSnNumber = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtDescription = new javax.swing.JTextArea();
        cbinventoryLocation = new javax.swing.JComboBox<>();
        txtInsertDate = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        addbtn = new javax.swing.JButton();
        txtReceivedBy = new javax.swing.JComboBox<>();
        txtIssuedBy = new javax.swing.JComboBox<>();
        txtAmount = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtRemarks = new javax.swing.JTextArea();
        jLabel11 = new javax.swing.JLabel();
        txtStatus = new javax.swing.JComboBox<>();
        locationbtn = new javax.swing.JButton();
        refreshDatebtn = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        saveandPreview = new javax.swing.JButton();
        entryscrollPane = new javax.swing.JScrollPane();
        inventoryEntryTable = new javax.swing.JTable();
        savebtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        getContentPane().setLayout(null);

        mainPanel.setBackground(new java.awt.Color(102, 255, 102));
        mainPanel.setLayout(null);

        InventoryInfoPanel.setBackground(new java.awt.Color(0, 102, 0));
        InventoryInfoPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        InventoryInfoPanel.setLayout(null);

        entryImage.setBackground(new java.awt.Color(102, 255, 102));
        entryImage.setForeground(new java.awt.Color(0, 0, 0));
        entryImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/NewInventory/defaultPic.png"))); // NOI18N
        entryImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 3));
        InventoryInfoPanel.add(entryImage);
        entryImage.setBounds(40, 30, 150, 140);

        uploadbtn.setBackground(new java.awt.Color(102, 0, 0));
        uploadbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        uploadbtn.setForeground(new java.awt.Color(255, 255, 255));
        uploadbtn.setText("Upload Image");
        uploadbtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        uploadbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadbtnActionPerformed(evt);
            }
        });
        InventoryInfoPanel.add(uploadbtn);
        uploadbtn.setBounds(40, 180, 150, 30);

        shootImage.setBackground(new java.awt.Color(102, 0, 0));
        shootImage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        shootImage.setForeground(new java.awt.Color(255, 255, 255));
        shootImage.setText("Shoot Image");
        shootImage.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        shootImage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                shootImageActionPerformed(evt);
            }
        });
        InventoryInfoPanel.add(shootImage);
        shootImage.setBounds(40, 220, 150, 30);

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("    Name:");
        InventoryInfoPanel.add(jLabel6);
        jLabel6.setBounds(240, 70, 90, 22);

        txtinventoryName.setBackground(new java.awt.Color(102, 255, 102));
        txtinventoryName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtinventoryName.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        InventoryInfoPanel.add(txtinventoryName);
        txtinventoryName.setBounds(340, 70, 328, 26);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("PAR no.:");
        InventoryInfoPanel.add(jLabel2);
        jLabel2.setBounds(240, 30, 78, 22);

        txt_parNo.setBackground(new java.awt.Color(102, 255, 102));
        txt_parNo.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txt_parNo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txt_parNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_parNoActionPerformed(evt);
            }
        });
        txt_parNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_parNoKeyTyped(evt);
            }
        });
        InventoryInfoPanel.add(txt_parNo);
        txt_parNo.setBounds(340, 30, 328, 26);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Issued by: ");
        InventoryInfoPanel.add(jLabel3);
        jLabel3.setBounds(230, 110, 99, 22);

        findIssuedbutton.setBackground(new java.awt.Color(102, 255, 102));
        findIssuedbutton.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        findIssuedbutton.setForeground(new java.awt.Color(0, 0, 0));
        findIssuedbutton.setText("...");
        findIssuedbutton.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        findIssuedbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findIssuedbuttonActionPerformed(evt);
            }
        });
        InventoryInfoPanel.add(findIssuedbutton);
        findIssuedbutton.setBounds(610, 110, 60, 28);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Received by: ");
        InventoryInfoPanel.add(jLabel4);
        jLabel4.setBounds(210, 150, 120, 22);

        jButton9.setBackground(new java.awt.Color(102, 255, 102));
        jButton9.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jButton9.setForeground(new java.awt.Color(0, 0, 0));
        jButton9.setText("...");
        jButton9.setToolTipText("");
        jButton9.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        InventoryInfoPanel.add(jButton9);
        jButton9.setBounds(610, 150, 60, 28);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText(" Ser. Number:");
        InventoryInfoPanel.add(jLabel5);
        jLabel5.setBounds(200, 190, 130, 22);

        txtSnNumber.setBackground(new java.awt.Color(102, 255, 102));
        txtSnNumber.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtSnNumber.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        InventoryInfoPanel.add(txtSnNumber);
        txtSnNumber.setBounds(340, 190, 330, 26);

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Description:");
        InventoryInfoPanel.add(jLabel10);
        jLabel10.setBounds(40, 350, 110, 22);

        txtDescription.setBackground(new java.awt.Color(102, 255, 102));
        txtDescription.setColumns(20);
        txtDescription.setFont(new java.awt.Font("MV Boli", 1, 14)); // NOI18N
        txtDescription.setLineWrap(true);
        txtDescription.setRows(5);
        txtDescription.setWrapStyleWord(true);
        txtDescription.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        InventoryInfoPanel.add(txtDescription);
        txtDescription.setBounds(40, 380, 630, 100);

        cbinventoryLocation.setBackground(new java.awt.Color(102, 255, 102));
        cbinventoryLocation.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cbinventoryLocation.setForeground(new java.awt.Color(0, 0, 0));
        cbinventoryLocation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "DICT Office" }));
        cbinventoryLocation.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        InventoryInfoPanel.add(cbinventoryLocation);
        cbinventoryLocation.setBounds(340, 310, 270, 30);

        txtInsertDate.setBackground(new java.awt.Color(102, 255, 102));
        txtInsertDate.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtInsertDate.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        InventoryInfoPanel.add(txtInsertDate);
        txtInsertDate.setBounds(340, 230, 270, 26);

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText(" Date:");
        InventoryInfoPanel.add(jLabel8);
        jLabel8.setBounds(268, 230, 60, 22);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Remarks:");
        InventoryInfoPanel.add(jLabel7);
        jLabel7.setBounds(40, 490, 87, 30);

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Status:");
        InventoryInfoPanel.add(jLabel9);
        jLabel9.setBounds(40, 270, 70, 30);

        addbtn.setBackground(new java.awt.Color(0, 102, 0));
        addbtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        addbtn.setForeground(new java.awt.Color(255, 255, 255));
        addbtn.setText("ADD");
        addbtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        addbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addbtnActionPerformed(evt);
            }
        });
        InventoryInfoPanel.add(addbtn);
        addbtn.setBounds(520, 540, 150, 60);

        txtReceivedBy.setBackground(new java.awt.Color(102, 255, 102));
        txtReceivedBy.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtReceivedBy.setForeground(new java.awt.Color(0, 0, 0));
        txtReceivedBy.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        InventoryInfoPanel.add(txtReceivedBy);
        txtReceivedBy.setBounds(340, 150, 260, 35);

        txtIssuedBy.setBackground(new java.awt.Color(102, 255, 102));
        txtIssuedBy.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtIssuedBy.setForeground(new java.awt.Color(0, 0, 0));
        txtIssuedBy.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        InventoryInfoPanel.add(txtIssuedBy);
        txtIssuedBy.setBounds(340, 110, 260, 35);

        txtAmount.setBackground(new java.awt.Color(102, 255, 102));
        txtAmount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtAmount.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        InventoryInfoPanel.add(txtAmount);
        txtAmount.setBounds(340, 270, 330, 26);

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(255, 255, 255));
        jLabel12.setText("Amount:");
        InventoryInfoPanel.add(jLabel12);
        jLabel12.setBounds(250, 270, 78, 22);

        txtRemarks.setBackground(new java.awt.Color(102, 255, 102));
        txtRemarks.setColumns(20);
        txtRemarks.setFont(new java.awt.Font("MV Boli", 1, 14)); // NOI18N
        txtRemarks.setLineWrap(true);
        txtRemarks.setRows(5);
        txtRemarks.setWrapStyleWord(true);
        txtRemarks.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        InventoryInfoPanel.add(txtRemarks);
        txtRemarks.setBounds(40, 520, 450, 90);

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setText(" Location:");
        InventoryInfoPanel.add(jLabel11);
        jLabel11.setBounds(240, 310, 100, 22);

        txtStatus.setBackground(new java.awt.Color(102, 255, 102));
        txtStatus.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtStatus.setForeground(new java.awt.Color(0, 0, 0));
        txtStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Serviceable", "Unserviceable", " " }));
        txtStatus.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        InventoryInfoPanel.add(txtStatus);
        txtStatus.setBounds(40, 300, 170, 35);

        locationbtn.setBackground(new java.awt.Color(102, 255, 102));
        locationbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        locationbtn.setForeground(new java.awt.Color(0, 0, 0));
        locationbtn.setText("...");
        locationbtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        locationbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationbtnActionPerformed(evt);
            }
        });
        InventoryInfoPanel.add(locationbtn);
        locationbtn.setBounds(620, 310, 50, 30);

        refreshDatebtn.setBackground(new java.awt.Color(102, 255, 102));
        refreshDatebtn.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        refreshDatebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/refresh.png"))); // NOI18N
        refreshDatebtn.setToolTipText("");
        refreshDatebtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        refreshDatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshDatebtnActionPerformed(evt);
            }
        });
        InventoryInfoPanel.add(refreshDatebtn);
        refreshDatebtn.setBounds(620, 230, 50, 28);

        mainPanel.add(InventoryInfoPanel);
        InventoryInfoPanel.setBounds(30, 20, 710, 630);

        jButton4.setBackground(new java.awt.Color(102, 0, 0));
        jButton4.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("DELETE");
        jButton4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        mainPanel.add(jButton4);
        jButton4.setBounds(760, 550, 140, 40);

        jButton3.setBackground(new java.awt.Color(102, 0, 0));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("EDIT");
        jButton3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        mainPanel.add(jButton3);
        jButton3.setBounds(940, 550, 120, 40);

        saveandPreview.setBackground(new java.awt.Color(102, 0, 0));
        saveandPreview.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        saveandPreview.setForeground(new java.awt.Color(255, 255, 255));
        saveandPreview.setText("SAVE AND SHOW QR CODE");
        saveandPreview.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        saveandPreview.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveandPreviewActionPerformed(evt);
            }
        });
        mainPanel.add(saveandPreview);
        saveandPreview.setBounds(760, 610, 490, 40);

        entryscrollPane.setOpaque(false);

        inventoryEntryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "PAR No", "Name", "Image"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        inventoryEntryTable.setOpaque(false);
        entryscrollPane.setViewportView(inventoryEntryTable);
        if (inventoryEntryTable.getColumnModel().getColumnCount() > 0) {
            inventoryEntryTable.getColumnModel().getColumn(0).setResizable(false);
            inventoryEntryTable.getColumnModel().getColumn(0).setPreferredWidth(10);
            inventoryEntryTable.getColumnModel().getColumn(1).setResizable(false);
            inventoryEntryTable.getColumnModel().getColumn(2).setResizable(false);
        }

        mainPanel.add(entryscrollPane);
        entryscrollPane.setBounds(760, 20, 490, 520);

        savebtn.setBackground(new java.awt.Color(102, 0, 0));
        savebtn.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        savebtn.setForeground(new java.awt.Color(255, 255, 255));
        savebtn.setText("SAVE");
        savebtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        savebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                savebtnActionPerformed(evt);
            }
        });
        mainPanel.add(savebtn);
        savebtn.setBounds(1120, 550, 130, 40);

        getContentPane().add(mainPanel);
        mainPanel.setBounds(0, 0, 1290, 700);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_parNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_parNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_parNoActionPerformed

    private void txt_parNoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_parNoKeyTyped
     
        
       
    }//GEN-LAST:event_txt_parNoKeyTyped

    private void uploadbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadbtnActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        fileChooser.showOpenDialog(this);
        File file = fileChooser.getSelectedFile();
        ImageIcon myImage = new ImageIcon(file.getPath());
        setImage(myImage.getImage());
        displayImage();
    }//GEN-LAST:event_uploadbtnActionPerformed

    private void shootImageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_shootImageActionPerformed
         new ShootImage(this).setVisible(true);
      
        

    }//GEN-LAST:event_shootImageActionPerformed

    private void addbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addbtnActionPerformed
        
      this.inventories.add(getInventoryEntry());
      reset();
      tabulateData();
        
    }//GEN-LAST:event_addbtnActionPerformed

    private void saveandPreviewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveandPreviewActionPerformed
        this.controller.insertMultipleProcess(this);
        
        
      
        
        new PrintPreview_StickerList(this.inventories).setVisible(true);
       
    }//GEN-LAST:event_saveandPreviewActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
       
            
    }//GEN-LAST:event_formWindowGainedFocus

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
         
      
    }//GEN-LAST:event_formFocusGained

    private void findIssuedbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findIssuedbuttonActionPerformed
        
        new SliderLeft(addEmployee.getContentPane()).setVisible(true);
        
    }//GEN-LAST:event_findIssuedbuttonActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        new SliderLeft(addEmployee.getContentPane()).setVisible(true);
      
    }//GEN-LAST:event_jButton9ActionPerformed

    private void locationbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationbtnActionPerformed
        new SliderLeft(addLocation.getContentPane()).setVisible(true);
    }//GEN-LAST:event_locationbtnActionPerformed

    private void refreshDatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshDatebtnActionPerformed
       txtInsertDate.setText(CreateSection.getDateToday());
    }//GEN-LAST:event_refreshDatebtnActionPerformed

    private void savebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_savebtnActionPerformed
         this.controller.insertMultipleProcess(this);
         resetData();
    }//GEN-LAST:event_savebtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddInventory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddInventory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel InventoryInfoPanel;
    private javax.swing.JButton addbtn;
    private javax.swing.JComboBox<String> cbinventoryLocation;
    private javax.swing.JLabel entryImage;
    private javax.swing.JScrollPane entryscrollPane;
    private javax.swing.JButton findIssuedbutton;
    private javax.swing.JTable inventoryEntryTable;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton locationbtn;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JButton refreshDatebtn;
    private javax.swing.JButton saveandPreview;
    private javax.swing.JButton savebtn;
    private javax.swing.JButton shootImage;
    private javax.swing.JTextField txtAmount;
    private javax.swing.JTextArea txtDescription;
    private javax.swing.JTextField txtInsertDate;
    private javax.swing.JComboBox<String> txtIssuedBy;
    private javax.swing.JComboBox<String> txtReceivedBy;
    private javax.swing.JTextArea txtRemarks;
    private javax.swing.JTextField txtSnNumber;
    private javax.swing.JComboBox<String> txtStatus;
    private javax.swing.JTextField txt_parNo;
    private javax.swing.JTextField txtinventoryName;
    private javax.swing.JButton uploadbtn;
    // End of variables declaration//GEN-END:variables


    public void defaultImageDisplay(){
        ClassLoader cl = this.getClass().getClassLoader();
        ImageIcon icon = new ImageIcon(cl.getResource("pictures/NewInventory/defaultPic.png"));
       // this.finalImage = icon.getImage();
        Image img = icon.getImage().getScaledInstance(entryImage.getWidth(), entryImage.getHeight(), Image.SCALE_SMOOTH);
        entryImage.setIcon(new ImageIcon(img));
    }



    public void changeColumnTitle(String[] headers,JTable table){
        
        for(int i=0;i<table.getColumnCount();i++)
            {
        TableColumn column1 = table.getTableHeader().getColumnModel().getColumn(i);

        column1.setHeaderValue(headers[i]);
} 
    
    }
    class TableModel extends AbstractTableModel{
        
        private String[] columns;
        private Object[][]rows;

        public TableModel() {
        }
        public void setColumnName(int i, String name) {
            columns[i] = name;
            fireTableStructureChanged();
        }
        
        public Class getColumnClass(int column){
            
            if(column == 3){
                return Icon.class;
            }
            else{
                return getValueAt(0,column).getClass();
            }
        
        }

        public TableModel(String[] columnName, Object[][] data) {
            this.columns = columnName;
            this.rows = data;
        }
        
        

        @Override
        public int getRowCount() {
            return this.rows.length;
        }

        @Override
        public int getColumnCount() {
            return this.columns.length;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            return rows[rowIndex][columnIndex];
        }
        
        public String getcolumnName(int col){
           return this.columns[col];
        }
    
    }
    
    public void init(){
       
        new SetSection().setIcon(this);
        this.controller = new InventoryController();
        this.addEmployee = new AddEmployee(this);
        this.addLocation = new AddLocation(this);
        //display default
        defaultImageDisplay();
        this.employees = new EmployeeController().getAllEmployees();
        this.locations = new LocationController().getAllLocations();
        this.inventories = new ArrayList<>();
        displayEmployees();
        displayLocations();
        reset();
        designTable(inventoryEntryTable, entryscrollPane);
 
    }
    
    public void setPosition(){
        
        setMinimumSize(new Dimension(mainPanel.getWidth(),mainPanel.getHeight()+37));
        Dimension dim = Toolkit.getDefaultToolkit().getScreenSize();
        
        this.setLocation(dim.width/2-this.getSize().width/2, (dim.height/2-this.getSize().height/2)-30);
    }
    
    public void reset(){
        
        txt_parNo.setText("");
        txtinventoryName.setText("");
        txtIssuedBy.setSelectedIndex(-1);
        txtReceivedBy.setSelectedIndex(-1);
        txtSnNumber.setText("");
        txtInsertDate.setText(CreateSection.getDateToday());
        txtAmount.setText("0");
        txtDescription.setText("");
        txtRemarks.setText("");
        cbinventoryLocation.setSelectedIndex(0);
        txtStatus.setSelectedIndex(0);
        defaultImageDisplay();
        
        
    }
    
    public Inventory getInventoryEntry(){
        
        Inventory inventory = new Inventory();
        
        //inventoryID will be generated into Database... //1
        
        inventory.setInventoryPAR_NO(txt_parNo.getText());//2
        inventory.setIssuedBy(this.employees.get(txtIssuedBy.getSelectedIndex()));
        inventory.setReceivedBy(this.employees.get(txtReceivedBy.getSelectedIndex()));
        inventory.setInventorySN(txtSnNumber.getText());
        inventory.setInventoryName(txtinventoryName.getText());
        inventory.setInventoryImage(getImage());
        inventory.setInventoryAmount(Double.parseDouble(txtAmount.getText()));
        inventory.setInventoryDescription(txtDescription.getText());
        inventory.setInventoryLocation(this.locations.get(cbinventoryLocation.getSelectedIndex()));
        inventory.setInventoryRemarks(txtRemarks.getText());
        inventory.setInventoryStatus(txtStatus.getSelectedItem().toString());
        inventory.setInventoryInsertDate(txtInsertDate.getText());
        inventory.setInventoryUpdate("none");
        inventory.setUpdateBy(StationSection.getLogUser());
        inventory.setInsertBy(StationSection.getLogUser());
        return inventory;
        
    }

    public JComboBox<String> getCbinventoryLocation() {
        return cbinventoryLocation;
    }

    public JTable getInventoryEntryTable() {
        return inventoryEntryTable;
    }

    public JComboBox<String> getTxtIssuedBy() {
        return txtIssuedBy;
    }

    public JComboBox<String> getTxtReceivedBy() {
        return txtReceivedBy;
    }

    public Image getImage() {
        return image;
    }

    public void setImage(Image image) {
        this.image = image;
    }
    
    public void displayImage(){
          SetSection.displayImage(entryImage, getImage());
    }
    
    public void displayEmployees(){
        
         this.employees = new EmployeeController().getAllEmployees();
        
         JComboBox[] combos = {txtIssuedBy,txtReceivedBy};
         
         for(JComboBox box:combos){
            
             box.removeAllItems();


            for(Employee employee:this.employees){

                box.addItem(employee.getFullname());
            }
         }
        
      
    }
    
    public void displayLocations(){
        
        this.locations = new LocationController().getAllLocations();
          cbinventoryLocation.removeAllItems();
        
        for(Location location:this.locations){
            
            cbinventoryLocation.addItem(location.getAddress());
        }
    }
    
    
    public void designTable(JTable table,JScrollPane scrollPane){
        
          scrollPane.setOpaque( false );
          scrollPane.getViewport().setOpaque( false );
          JTableHeader header = table.getTableHeader();
          header.setFont(new Font("Dialog", Font.BOLD, 14));
          
          header.setBackground(new Color(255,204,0));
          header.setForeground(Color.BLACK);
          header.setPreferredSize(new Dimension(0,30));
        
          table.setOpaque(false);
          DefaultTableCellRenderer renderer = new DefaultTableCellRenderer(){
            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                 JLabel label = (JLabel)c;
                label.setVerticalAlignment(SwingConstants.CENTER);
                label.setHorizontalAlignment(SwingConstants.CENTER);
                label.setFont(new Font("Dialog", Font.PLAIN, 15));
              
                if(isSelected){
                       label.setBackground(new Color(102,255,102));
                        label.setForeground(Color.BLACK);
                        label.setFont(new Font("Dialog", Font.BOLD, 15));

                }else{

                    if(row % 2 == 0){

                           label.setBackground(new Color(255,255,255));
                           label.setForeground(Color.black);

                    }else{

                            label.setBackground(new Color(153,153,153));
                            label.setForeground(Color.black);
                        }

                }

                return label;
            }
             
        };
          table.setDefaultRenderer(Object.class, renderer);
          
           
    }
    
    
    public void tabulateData(){
         
        Object[] columnNames = {"PAR No","Name","Image"};
        Object[][] myData = new Object[inventories.size()][3];
        
        
        for(int x = 0; x<inventories.size(); x++){
            
            myData[x][0] = inventories.get(x).getInventoryPAR_NO();
            myData[x][1] = inventories.get(x).getInventoryName();
            myData[x][2] = new ImageIcon(inventories.get(x).getInventoryImage().getScaledInstance
        (150, 100, Image.SCALE_SMOOTH));
            
        }
        
       ModelTable  modTable = new ModelTable(myData,columnNames);
       
       inventoryEntryTable.setModel(modTable);
       inventoryEntryTable.getColumnModel().getColumn(2).setPreferredWidth(120);
       inventoryEntryTable.setRowHeight(100);
        designTable(inventoryEntryTable, entryscrollPane);
            
            
     } 
    
    
     public boolean validateInput(){
         
         String displayMessage = "";
         boolean stat = false;
         
        if(txt_parNo.getText().isEmpty()){
             displayMessage+="Please Insert your PAR No.\n";
             stat = stat || true;
        }
        
        if(txtinventoryName.getText().isEmpty()){
             displayMessage+="Please Insert your Inventory Name.\n";
             stat = stat || true;
        }
        
        if(txtIssuedBy.getSelectedIndex() == -1){
            displayMessage+="Please Choose Issued By.\n";
            stat = stat || true;
        }
        
        if(txtReceivedBy.getSelectedIndex() == -1){
            displayMessage+="Please Choose Received By.\n";
            stat = stat || true;
        }
        if(txtSnNumber.getText().isEmpty()){
            displayMessage+="Please Enter the Serial Number.\n";
            stat = stat || true;
        }
        if(txtInsertDate.getText().isEmpty()){
            displayMessage+="Please Enter the Date.\n";
            stat = stat || true;
        }
        
        if(txtAmount.getText().isEmpty()){
            
            displayMessage+="Please Enter the Amount.\n";
             stat = stat || true;
            
            
        }else{
            try{
                
                Double.parseDouble(txtAmount.getText());
            
            }catch(NumberFormatException ex){
                displayMessage+="Please Input a number in the Amount.\n";
                stat = stat || true;
            }
        }
         
         setMessage(displayMessage);
        return stat;
     }

    public String getMessage() {
        return message;
    }

    public void setMessage(String message) {
        this.message = message;
    }

    public ArrayList<Inventory> getInventories() {
        return inventories;
    }

    public void setInventories(ArrayList<Inventory> inventories) {
        this.inventories = inventories;
    }
    
    public void resetData(){
        DefaultTableModel model = (DefaultTableModel)inventoryEntryTable.getModel();
        model.setRowCount(0);
        setInventories(new ArrayList<>());
    }
     
     
 

}
