/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views.Inventory;

import Forms.StickerInventory;
import Inventories.PrintSettings;
import Model.*;
import Model.PanelRender;
import Sections.CreateSection;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.GridLayout;
import java.util.ArrayList;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.TableCellRenderer;


/**
 *
 * @author Eunar B. Dayangco
 */
public class PrintPreview_StickerList extends javax.swing.JFrame {

    /**
     * Creates new form PrintPreview_StickerList
     */
    private static ArrayList<Inventory>inventoryEntries;
    private Object[][] datas;
    private Object[] columnName;
    private JFrame printFrame;
    
    public PrintPreview_StickerList(ArrayList<Inventory>inventories) {
        initComponents();
        this.inventoryEntries = inventories;
        
       
        
        
        this.datas = getEntryDatas(inventoryEntries);
        displayOnTable();
        
    }
    public PrintPreview_StickerList() {
        initComponents();
     
       // displayandPrint();

    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tableofEntries = new javax.swing.JTable();
        printbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        tableofEntries.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        jScrollPane1.setViewportView(tableofEntries);

        printbtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        printbtn.setText("PRINT");
        printbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(printbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(939, 939, 939))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1056, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .addComponent(printbtn)
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 667, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void printbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printbtnActionPerformed
           
          new PrintSettings(tableofEntries).print();
    }//GEN-LAST:event_printbtnActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowClosed
   

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PrintPreview_StickerList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PrintPreview_StickerList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PrintPreview_StickerList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PrintPreview_StickerList.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PrintPreview_StickerList().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton printbtn;
    private javax.swing.JTable tableofEntries;
    // End of variables declaration//GEN-END:variables

    public void displayData(){
        
        for(Inventory inv:inventoryEntries){
            CreateSection.displayInfoMessage("Title", inv.getInventoryID()+"");
        }
    
    
    }
     public void displayandPrint(){
         
            JFrame frame = new JFrame();
            int rowSize = inventoryEntries.size()/2 ;
            int width = new StickerInventory().getPanelWidth();
            int height = new StickerInventory().getPanelHeight();
          
            frame.setLayout(new GridLayout(rowSize, 2));
         
            frame.setSize(new Dimension(700,1000));
          
          
          int y = 0;
          int z = 0;
        for(int x = 0; x<inventoryEntries.size(); x++){
                               
              JPanel panel= new JPanel();
               
                      
                panel.setSize(new Dimension(width,height));
                      
                for(Component comp:new StickerInventory(inventoryEntries.get(x)).getComponents()){
                    panel.add(comp);
                      
                }
                this.add(panel);
                z++;
        
                if(z == 2){
                  y++;
                  z=0;
                      
                }
                      
                   
        }
 
    }
     
     public void displayOnTable(){
         
        Object [] columnNames = {"Title 1","Title 2"};
         JTable table = new JTable(datas,columnNames);
        tableofEntries.setModel(table.getModel());
        tableofEntries.getColumn("Title 1").setCellRenderer(new ImageRenderer());
         tableofEntries.getColumn("Title 2").setCellRenderer(new ImageRenderer());
        tableofEntries.setRowHeight(new StickerInventory().getPanelHeight());
        
        tableofEntries.getColumnModel().getColumn(0).setPreferredWidth(new StickerInventory().getPanelWidth()+10);
        tableofEntries.getColumnModel().getColumn(1).setPreferredWidth(new StickerInventory().getPanelWidth()+10);
       
    }
     
     class ImageRenderer implements TableCellRenderer{

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            JPanel panel = (JPanel) datas[row][column];
            return (Component)panel;    
        }
     
     
     }
     
    public Object[][]getEntryDatas(ArrayList<Inventory> inventories){
            
                if(((int)inventories.size()/2) != 0 || inventories.size()==1){    

                    inventories.add(new Inventory());

                }
             
               int rowSize = (int)(inventories.size()/2);
              

            int z = 0;
            Object[][]data = new Object[rowSize][2];
            
                for(int x = 0 ; x<rowSize; x++){
                    for(int y = 0; y<2; y++){
                        data[x][y] = new StickerInventory(inventories.get(z));
                          tableofEntries.getColumn("Title 1").setCellRenderer(new PanelRender(new StickerInventory(inventories.get(z))));
                        z++;
                    }
                }
                
            
            
            return data;
        
        }
        
      

    
    
}
