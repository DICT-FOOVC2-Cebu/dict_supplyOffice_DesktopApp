/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Views.Inventory;



import Controller.InventoryController;
import Model.Inventory;
import Sections.CreateSection;
import Views.Inventory.AddInventory;
import Views.Slider.AnimationSection;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Eunar B. Dayangco
 */
public class InventoryPage extends javax.swing.JFrame {

    /**
     * Creates new form InventoryPage
     */
    private AddInventory addInventory;
    private InventoryController controller;
    
    
    public InventoryPage() {
        initComponents();
        init();
        
    }
  
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inventory_bodyPanel = new javax.swing.JPanel();
        Inventoryscrollpane = new javax.swing.JScrollPane();
        listofInventoriesTable = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        newbtn = new javax.swing.JButton();
        scanbtn = new javax.swing.JButton();
        scrollsummaryList = new javax.swing.JScrollPane();
        summaryList = new javax.swing.JList<>();
        stickerbtn = new javax.swing.JButton();
        showbtn = new javax.swing.JButton();
        cbsearchby = new javax.swing.JComboBox<>();
        txtfind = new javax.swing.JTextField();
        findbtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        counterEntry = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        inventory_bodyPanel.setBackground(new java.awt.Color(0, 153, 255));
        inventory_bodyPanel.setToolTipText("");

        Inventoryscrollpane.setOpaque(false);

        listofInventoriesTable.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        listofInventoriesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "PAR No.", "Name", "Location"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Inventoryscrollpane.setViewportView(listofInventoriesTable);
        if (listofInventoriesTable.getColumnModel().getColumnCount() > 0) {
            listofInventoriesTable.getColumnModel().getColumn(0).setPreferredWidth(5);
            listofInventoriesTable.getColumnModel().getColumn(1).setPreferredWidth(10);
        }

        jButton2.setBackground(new java.awt.Color(0, 204, 0));
        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 204));
        jButton2.setText("DELETE");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));

        newbtn.setBackground(new java.awt.Color(0, 204, 0));
        newbtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        newbtn.setForeground(new java.awt.Color(0, 0, 204));
        newbtn.setText("NEW");
        newbtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        newbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newbtnActionPerformed(evt);
            }
        });

        scanbtn.setBackground(new java.awt.Color(0, 204, 0));
        scanbtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        scanbtn.setForeground(new java.awt.Color(0, 0, 204));
        scanbtn.setText("SCAN");
        scanbtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        scanbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scanbtnActionPerformed(evt);
            }
        });

        scrollsummaryList.setOpaque(false);

        summaryList.setBackground(new java.awt.Color(0, 0, 102));
        summaryList.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        summaryList.setForeground(new java.awt.Color(255, 255, 255));
        summaryList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                summaryListValueChanged(evt);
            }
        });
        scrollsummaryList.setViewportView(summaryList);

        stickerbtn.setBackground(new java.awt.Color(0, 204, 0));
        stickerbtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        stickerbtn.setForeground(new java.awt.Color(0, 0, 204));
        stickerbtn.setText("STICKER");
        stickerbtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        stickerbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stickerbtnActionPerformed(evt);
            }
        });

        showbtn.setBackground(new java.awt.Color(0, 204, 0));
        showbtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        showbtn.setForeground(new java.awt.Color(0, 0, 204));
        showbtn.setText("SHOW INFO");
        showbtn.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        showbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showbtnActionPerformed(evt);
            }
        });

        cbsearchby.setBackground(new java.awt.Color(0, 153, 255));
        cbsearchby.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cbsearchby.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location", "Issued By", "Received By", "Amount", "Insert By", "Name", "PAR NO", "SN" }));
        cbsearchby.setFocusable(false);
        cbsearchby.setOpaque(false);
        cbsearchby.setRequestFocusEnabled(false);
        cbsearchby.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbsearchbyItemStateChanged(evt);
            }
        });

        txtfind.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        txtfind.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtfind.setToolTipText("");
        txtfind.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtfind.setOpaque(false);
        txtfind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtfindActionPerformed(evt);
            }
        });

        findbtn.setBackground(new java.awt.Color(0, 0, 102));
        findbtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        findbtn.setForeground(new java.awt.Color(255, 255, 255));
        findbtn.setText("FIND");
        findbtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        findbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                findbtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("COUNT:");

        counterEntry.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        counterEntry.setText("0");

        javax.swing.GroupLayout inventory_bodyPanelLayout = new javax.swing.GroupLayout(inventory_bodyPanel);
        inventory_bodyPanel.setLayout(inventory_bodyPanelLayout);
        inventory_bodyPanelLayout.setHorizontalGroup(
            inventory_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inventory_bodyPanelLayout.createSequentialGroup()
                .addGroup(inventory_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inventory_bodyPanelLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(cbsearchby, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(txtfind, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(findbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(showbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(inventory_bodyPanelLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(scrollsummaryList, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Inventoryscrollpane, javax.swing.GroupLayout.PREFERRED_SIZE, 609, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(inventory_bodyPanelLayout.createSequentialGroup()
                        .addGap(230, 230, 230)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addComponent(counterEntry, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(80, 80, 80)
                        .addComponent(stickerbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(newbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(inventory_bodyPanelLayout.createSequentialGroup()
                        .addGap(560, 560, 560)
                        .addComponent(scanbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(60, Short.MAX_VALUE))
        );
        inventory_bodyPanelLayout.setVerticalGroup(
            inventory_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inventory_bodyPanelLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(inventory_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(findbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(showbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(inventory_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(cbsearchby, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtfind, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)))
                .addGap(17, 17, 17)
                .addGroup(inventory_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollsummaryList, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Inventoryscrollpane, javax.swing.GroupLayout.PREFERRED_SIZE, 370, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(inventory_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(counterEntry)
                    .addGroup(inventory_bodyPanelLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(inventory_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(stickerbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(13, 13, 13)
                .addGroup(inventory_bodyPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scanbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(53, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(inventory_bodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(inventory_bodyPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void newbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newbtnActionPerformed
       
        addInventory.setVisible(true);
    }//GEN-LAST:event_newbtnActionPerformed

    private void cbsearchbyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbsearchbyItemStateChanged
           
        this.controller.displayList(summaryList, getSelectedColumn());
         summaryList.setSelectedIndex(0);   
            

    }//GEN-LAST:event_cbsearchbyItemStateChanged

    private void findbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_findbtnActionPerformed
      
    }//GEN-LAST:event_findbtnActionPerformed

    private void scanbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scanbtnActionPerformed
        new ScanInventory().setVisible(true);
    }//GEN-LAST:event_scanbtnActionPerformed

    private void showbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showbtnActionPerformed
            displayInfo();
    }//GEN-LAST:event_showbtnActionPerformed

    private void txtfindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtfindActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtfindActionPerformed

    private void stickerbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stickerbtnActionPerformed
       
    }//GEN-LAST:event_stickerbtnActionPerformed

    private void summaryListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_summaryListValueChanged
        
      this.controller.displayChooseResult(this);
        
       
    }//GEN-LAST:event_summaryListValueChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InventoryPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InventoryPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InventoryPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InventoryPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InventoryPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane Inventoryscrollpane;
    private javax.swing.JComboBox<String> cbsearchby;
    private javax.swing.JLabel counterEntry;
    private javax.swing.JButton findbtn;
    private javax.swing.JPanel inventory_bodyPanel;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTable listofInventoriesTable;
    private javax.swing.JButton newbtn;
    private javax.swing.JButton scanbtn;
    private javax.swing.JScrollPane scrollsummaryList;
    private javax.swing.JButton showbtn;
    private javax.swing.JButton stickerbtn;
    private javax.swing.JList<String> summaryList;
    private javax.swing.JTextField txtfind;
    // End of variables declaration//GEN-END:variables

    
    public void init(){
        this.addInventory = new AddInventory();
        this.controller = new InventoryController();
        this.controller.displayList(summaryList, getSelectedColumn());
    }
    
    public String getSelectedColumn(){
        
        String columName;
        
        String selected = cbsearchby.getSelectedItem().toString() !=null?
                cbsearchby.getSelectedItem().toString():"PAR NO";
        
        switch(selected){
            case "ID": columName = "InventoryID"; break;
            case "SN": columName = "InventorySN"; break;
            case "Name": columName = "InventoryName"; break;
            case "PAR NO": columName = "InventoryParNo"; break;
            case "Location": columName = "InventoryLocation"; break;
            case "Issued By": columName = "InventoryIssuedBy"; break;
            case "Received By": columName = "InventoryReceivedBy"; break;
            case "Amount": columName = "InventoryAmount"; break;
            case "Insert By": columName = "InventoryInsertBy"; break;
            default:columName = "InventoryParNo"; break;

        }
        
        return columName;
    }
    
    public String getListSelectedValue(){
        return summaryList.getSelectedValue()==null?"":summaryList.getSelectedValue()+"";
    }
    
    public int getListSelectedIndex(){
        return summaryList.getSelectedIndex();
    }
    
    public void displayOnTable(ArrayList<Inventory> inventoriesDB){
        
        DefaultTableModel model = (DefaultTableModel)listofInventoriesTable.getModel();
        model.setRowCount(0);
        
        Object[] row = new Object[4];
        
        for(Inventory inventory:inventoriesDB){
            row[0] = inventory.getInventoryID();
            row[1] = inventory.getInventoryPAR_NO();
            row[2] = inventory.getInventoryName();
            row[3] = inventory.getInventoryLocation().getAddress();
            model.addRow(row);
        }
        
    }
    
    public void displayInfo(){
        
        if(listofInventoriesTable.getSelectionModel().isSelectionEmpty()){
            CreateSection.displayInfoMessage("Selection Row Information", 
                    "Please select row and click me again");
        }else{
            InventoryInfo info = new InventoryInfo(getSelectedInventoryInfo());
            new AnimationSection().framesMovetoBottom(info, 70, 35);
        }
        
        
    }
    
    public Inventory getSelectedInventoryInfo(){
        
        int id = Integer.parseInt(listofInventoriesTable.getValueAt(listofInventoriesTable.getSelectedRow(), 0).toString());
        
        Inventory inventory = new InventoryController().getInventory(id);
        
        return inventory;
        
    }
    
    
    
}
