/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ChangePassword;

import Account.Admin;
import Sections.CreateSection;
import Sections.SetSection;
import Sections.StationSection;

/**
 *
 * @author Eunar B. Dayangco
 */
public class ChangePassword extends javax.swing.JFrame {

    /**
     * Creates new form ChangePassword
     */
    
    private ChangePasswordController controller;
    
    public ChangePassword() {
        initComponents();
        new SetSection().designForm(this, passwordbodyPanel, "mini");
        this.controller = new ChangePasswordController();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        passwordbodyPanel = new javax.swing.JPanel();
        headbar = new javax.swing.JPanel();
        closebtn = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCurrentPassword = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        txtNewPassword = new javax.swing.JPasswordField();
        jLabel5 = new javax.swing.JLabel();
        txtRetypePassword = new javax.swing.JPasswordField();
        enterbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(null);

        passwordbodyPanel.setBackground(new java.awt.Color(0, 0, 255));
        passwordbodyPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 3));
        passwordbodyPanel.setLayout(null);

        headbar.setBackground(new java.awt.Color(0, 0, 0));
        headbar.setLayout(null);

        closebtn.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        closebtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/pictures/LoginComponents/cancel.png"))); // NOI18N
        closebtn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                closebtnMouseClicked(evt);
            }
        });
        headbar.add(closebtn);
        closebtn.setBounds(320, 0, 30, 30);

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("CHANGE PASSWORD");
        headbar.add(jLabel3);
        jLabel3.setBounds(10, -6, 160, 40);

        passwordbodyPanel.add(headbar);
        headbar.setBounds(0, 0, 350, 30);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Current Password:");
        passwordbodyPanel.add(jLabel2);
        jLabel2.setBounds(40, 60, 200, 20);

        txtCurrentPassword.setBackground(new java.awt.Color(0, 0, 102));
        txtCurrentPassword.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtCurrentPassword.setForeground(new java.awt.Color(255, 255, 255));
        txtCurrentPassword.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCurrentPassword.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtCurrentPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCurrentPasswordKeyPressed(evt);
            }
        });
        passwordbodyPanel.add(txtCurrentPassword);
        txtCurrentPassword.setBounds(40, 90, 270, 40);

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("New Password:");
        passwordbodyPanel.add(jLabel4);
        jLabel4.setBounds(40, 150, 200, 20);

        txtNewPassword.setBackground(new java.awt.Color(0, 0, 102));
        txtNewPassword.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtNewPassword.setForeground(new java.awt.Color(255, 255, 255));
        txtNewPassword.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtNewPassword.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtNewPassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNewPasswordKeyPressed(evt);
            }
        });
        passwordbodyPanel.add(txtNewPassword);
        txtNewPassword.setBounds(40, 180, 270, 40);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Re-type Password:");
        passwordbodyPanel.add(jLabel5);
        jLabel5.setBounds(40, 240, 200, 20);

        txtRetypePassword.setBackground(new java.awt.Color(0, 0, 102));
        txtRetypePassword.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        txtRetypePassword.setForeground(new java.awt.Color(255, 255, 255));
        txtRetypePassword.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtRetypePassword.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));
        txtRetypePassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtRetypePasswordKeyPressed(evt);
            }
        });
        passwordbodyPanel.add(txtRetypePassword);
        txtRetypePassword.setBounds(40, 270, 270, 40);

        enterbtn.setBackground(new java.awt.Color(204, 0, 0));
        enterbtn.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        enterbtn.setForeground(new java.awt.Color(255, 255, 255));
        enterbtn.setText("SAVE");
        enterbtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        enterbtn.setFocusPainted(false);
        enterbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                enterbtnActionPerformed(evt);
            }
        });
        enterbtn.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                enterbtnKeyPressed(evt);
            }
        });
        passwordbodyPanel.add(enterbtn);
        enterbtn.setBounds(150, 340, 160, 40);

        getContentPane().add(passwordbodyPanel);
        passwordbodyPanel.setBounds(0, 0, 350, 420);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void closebtnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_closebtnMouseClicked
       
        this.setVisible(false);
    }//GEN-LAST:event_closebtnMouseClicked

    private void txtCurrentPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCurrentPasswordKeyPressed
       
    }//GEN-LAST:event_txtCurrentPasswordKeyPressed

    private void txtNewPasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNewPasswordKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNewPasswordKeyPressed

    private void txtRetypePasswordKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRetypePasswordKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRetypePasswordKeyPressed

    private void enterbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_enterbtnActionPerformed
         
        processUpdatePassword();
        
       

    }//GEN-LAST:event_enterbtnActionPerformed

    private void enterbtnKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_enterbtnKeyPressed
       
    }//GEN-LAST:event_enterbtnKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChangePassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ChangePassword().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel closebtn;
    private javax.swing.JButton enterbtn;
    private javax.swing.JPanel headbar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel passwordbodyPanel;
    private javax.swing.JPasswordField txtCurrentPassword;
    private javax.swing.JPasswordField txtNewPassword;
    private javax.swing.JPasswordField txtRetypePassword;
    // End of variables declaration//GEN-END:variables

    public boolean InvalidInput(){
    
        String oldPassword = txtCurrentPassword.getText();
        String newPassword = txtNewPassword.getText();
        String retypePassword = txtRetypePassword.getText();
        
        return oldPassword.isEmpty() || newPassword.isEmpty() ||
                retypePassword.isEmpty();
    }
    public boolean isRetypePasswordMatch(){
        
        String newPassword = txtNewPassword.getText();
        String retypePassword = txtRetypePassword.getText();
        
        return retypePassword.equals(newPassword);
    }
    
    public boolean isCurrentPassword(){
        
        String currentPassword = txtCurrentPassword.getText();
        String fromLoggedPassword = StationSection.getLoggedAdmin()
                .getAdminPassword();
        
        return currentPassword.equals(fromLoggedPassword);
    
    }
    
    public void processUpdatePassword(){
       
        if(InvalidInput()){
        
            CreateSection.displayErrorMessage("Fields Validation","Empty Fields");
                    
        }else if(!isRetypePasswordMatch()){
            CreateSection.displayErrorMessage("Fields Validation","Password not match!");
        }else if(!isCurrentPassword()){
            CreateSection.displayErrorMessage(
                    "Fields Validation","This is not your password");
        }else{
            
            Admin admin = StationSection.getLoggedAdmin();
            admin.setAdminPassword(txtNewPassword.getText());
            
            this.controller = new ChangePasswordController(admin);
            this.controller.changePassword();
            
            if(controller.isSuccess()){
                CreateSection.displayInfoMessage("Confirmation", 
                        "Successfully Updated your Password!");
                StationSection.setLoggedAdmin(admin);
                txtCurrentPassword.setText("");
                txtNewPassword.setText("");
                txtRetypePassword.setText("");
                 new SetSection().setDisplayFromAbove(this, 70);
            }else{
                CreateSection.displayErrorMessage("Update Password Error", 
                        "Failed to Update your Password");
            }
            
           
        }
    
    }

}
