/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package User;

import Sections.CreateSection;
import Sections.SetSection;
import java.awt.Color;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Eunar B. Dayangco
 */
public class ViewUser extends javax.swing.JFrame {

    /**
     * Creates new form SsearchPage
     */
    private UserController controller;
    private EditUser editUser;
    public ViewUser() {
        
        initComponents();
        this.controller = new UserController();
        displayOnTable();
        new SetSection().setTableRender(userListTable,18,45,new Color(102,0,0),
                new Color(102,0,0),Color.white,Color.white);
         tableScrollPane.getViewport().setBackground(new Color(0,0,0,0));
         this.editUser = new EditUser();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tableScrollPane = new javax.swing.JScrollPane();
        userListTable = new javax.swing.JTable();
        editbtn = new javax.swing.JButton();
        deletebtn = new javax.swing.JButton();
        activationbtn = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                formFocusGained(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(102, 0, 0));

        tableScrollPane.setOpaque(false);

        userListTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UserID", "Fullname", "Logged In", "Active"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        userListTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                userListTableMousePressed(evt);
            }
        });
        tableScrollPane.setViewportView(userListTable);
        if (userListTable.getColumnModel().getColumnCount() > 0) {
            userListTable.getColumnModel().getColumn(0).setResizable(false);
            userListTable.getColumnModel().getColumn(0).setPreferredWidth(50);
            userListTable.getColumnModel().getColumn(1).setResizable(false);
            userListTable.getColumnModel().getColumn(1).setPreferredWidth(300);
            userListTable.getColumnModel().getColumn(2).setResizable(false);
            userListTable.getColumnModel().getColumn(2).setPreferredWidth(5);
            userListTable.getColumnModel().getColumn(3).setResizable(false);
            userListTable.getColumnModel().getColumn(3).setPreferredWidth(10);
        }

        editbtn.setBackground(new java.awt.Color(255, 204, 0));
        editbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        editbtn.setText("Edit");
        editbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editbtnActionPerformed(evt);
            }
        });

        deletebtn.setBackground(new java.awt.Color(255, 204, 0));
        deletebtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        deletebtn.setText("Delete");
        deletebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deletebtnActionPerformed(evt);
            }
        });

        activationbtn.setBackground(new java.awt.Color(255, 204, 0));
        activationbtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        activationbtn.setText("DEACTIVATE");
        activationbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                activationbtnActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("LIST OF USERS");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tableScrollPane)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(activationbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 234, Short.MAX_VALUE)
                                .addComponent(deletebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(38, 38, 38)
                                .addComponent(editbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(271, 271, 271)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(114, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(63, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(tableScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 339, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(editbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deletebtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(activationbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(80, 80, 80))
        );

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("ACCOUNT INFORMATION");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(276, 276, 276)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(276, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(285, 285, 285)
                    .addComponent(jLabel4)
                    .addContainerGap(285, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void deletebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deletebtnActionPerformed
        deleteUser();
    }//GEN-LAST:event_deletebtnActionPerformed

    private void editbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editbtnActionPerformed
      
        openEditForm();

    }//GEN-LAST:event_editbtnActionPerformed

    private void formFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusGained
       
    }//GEN-LAST:event_formFocusGained

    private void activationbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_activationbtnActionPerformed
             
        
        if(userListTable.getSelectionModel().isSelectionEmpty()){
            CreateSection.displayInfoMessage("User Edit Instruction", 
                    "Please select a row first in the table and Click me again!");
            
        }else{
            

           
             for(int x:userListTable.getSelectedRows()){
                 
                  int row = x;
                  int selectedID = Integer.parseInt(userListTable.getValueAt(row, 0).toString());
                  boolean selectedStat = userListTable.getValueAt(row, 3).toString().equals("YES"); 
                  boolean selectLogged =userListTable.getValueAt(row, 2).toString().equals("YES");
                 
                if(selectLogged){

                    CreateSection.displayInfoMessage("Activation Info", 
                            "User is still Logged In. Please Log.out the User");
                }

                else{
                    changeActiveStatus(selectedID,selectedStat);
                }
            
            
            }
            
            

        
        }
            
    }//GEN-LAST:event_activationbtnActionPerformed

    private void userListTableMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userListTableMousePressed
          changeActivateBtn();
    }//GEN-LAST:event_userListTableMousePressed
    public void changeActivateBtn(){
        
           int row = userListTable.getSelectedRow();
            int col = userListTable.getSelectedColumn();
          
            boolean selectedStat = userListTable.getValueAt(row, 3).toString().equals("YES")?true:false;
             // CreateSection.displayInfoMessage("stat", selectedStat+"");
            if(selectedStat){
                activationbtn.setText("DEACTIVATE");
            } else{
                activationbtn.setText("ACTIVATE");
            }  
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ViewUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ViewUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ViewUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ViewUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ViewUser().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton activationbtn;
    private javax.swing.JButton deletebtn;
    private javax.swing.JButton editbtn;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane tableScrollPane;
    private javax.swing.JTable userListTable;
    // End of variables declaration//GEN-END:variables

    public void displayOnTable(){
    
        DefaultTableModel model = (DefaultTableModel) userListTable.getModel();
        model.setRowCount(0);
        Object[] row = new Object[4];
        
        for(User user:controller.getAllUsers()){
            
            row[0] = user.getUserID();
            row[1] = user.getUserFullname();
            row[2] = user.isLogged()?"YES":"NO";
            row[3] = user.isActive()?"YES":"NO";
            model.addRow(row);
        }
    
    }
    
  
    public void deleteUser(){
        
        if(userListTable.getSelectionModel().isSelectionEmpty()){
            CreateSection.displayInfoMessage("User Delete Instruction", 
                    "Please select a row first in the table and Click me again!");
            
        }else{
        
            int row = userListTable.getSelectedRow();
            int col = userListTable.getSelectedColumn();
            int id = Integer.parseInt(userListTable.getValueAt(row, 0).toString());
            User user = controller.getUser(id);
            controller = new UserController(user);
            controller.deleteUser();
        
            if(!controller.isSuccess()){
                CreateSection.displayErrorMessage("Delete User Error",
                        "Cannot delete user");
            }else{
                displayOnTable();
            }
            
           
        }
        

    
    }
    public void openEditForm(){
         this.editUser.setVisible(false);
         if(userListTable.getSelectionModel().isSelectionEmpty()){
            CreateSection.displayInfoMessage("User Edit Instruction", 
                    "Please select a row first in the table and Click me again!");
            
        }else{
                int row = userListTable.getSelectedRow();
                int col = userListTable.getSelectedColumn();
                int id = Integer.parseInt(userListTable.getValueAt(row, 0).toString());
                User user = controller.getUser(id);
                this.editUser = new EditUser(user);
    
               
                new SetSection().setDisplayFromDown(this.editUser, 70);
                
                
               
         }
    }
    
    
    public void editUser(){
        
         
        if(userListTable.getSelectionModel().isSelectionEmpty()){
            CreateSection.displayInfoMessage("User Edit Instruction", 
                    "Please select a row first in the table and Click me again!");
            
        }else{
        
            int row = userListTable.getSelectedRow();
            int col = userListTable.getSelectedColumn();
            int id = Integer.parseInt(userListTable.getValueAt(row, 0).toString());
            User user = controller.getUser(id);
            controller = new UserController(user);
            controller.updateUser();
        
            if(!controller.isSuccess()){
                CreateSection.displayErrorMessage("Edit User Error",
                        "Cannot delete user");
            }else{
                displayOnTable();
            }
        }
        
    
    }
    
    public void changeActiveStatus(int id,boolean active){
        
    
            
            User user = new User();
            user.setUserID(id);
            
            controller = new UserController(user);
            controller.changeActiveStatus(!active);
            
            if(!controller.isSuccess()){
                CreateSection.displayErrorMessage("Update Activation", 
                        "We cant update this User!");
            }else{
                displayOnTable();
               
            }
            
            
        
    
    }
}

